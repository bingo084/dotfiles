# Lines configured by zsh-newuser-install
HISTFILE=$HOME/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt extendedglob nomatch notify
unsetopt beep
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/bingo/.zshrc'

os="$(uname)"
if [[ "$os" == "Darwin" ]]; then
    zsh_plugins="/opt/homebrew/share"
elif [[ "$os" == "Linux" ]]; then
    zsh_plugins="/usr/share/zsh/plugins"
fi

if [[ "$os" == "Darwin" ]]; then
    fpath=(/opt/homebrew/share/zsh/site-functions $fpath)
fi
fpath=($HOME/.config/zsh/completions $fpath)
fpath=($HOME/.config/zsh/functions $fpath)
autoload -Uz $fpath[1]/*(.:t)
autoload -Uz compinit && compinit
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*'
# End of lines added by compinstall

eval "$(starship init zsh)"
export STARSHIP_CONFIG="$HOME/.config/starship/config.toml"

# zsh-autosuggestions
source "$zsh_plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
export ZSH_AUTOSUGGEST_STRATEGY=(match_prev_cmd completion)
# zsh-syntax-highlighting
source "$zsh_plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
# zsh-you-should-use
source "$zsh_plugins/zsh-you-should-use/you-should-use.plugin.zsh"
# zsh-history-substring-search
source "$zsh_plugins/zsh-history-substring-search/zsh-history-substring-search.zsh"
export HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND="bg=green,fg=black,bold"
export HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_NOT_FOUND="bg=red,fg=black,bold"
bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down
# zsh-auto-notify
source "$HOME/.config/zsh/plugins/auto-notify.plugin.zsh"
AUTO_NOTIFY_IGNORE+=("btop" "chezmoi" "lazygit" "yazi")

# fzf
if [[ "$os" == "Darwin" ]]; then
    source "/opt/homebrew/opt/fzf/shell/completion.zsh"
    source "/opt/homebrew/opt/fzf/shell/key-bindings.zsh"
elif [[ "$os" == "Linux" ]]; then
    source "/usr/share/fzf/completion.zsh"
    source "/usr/share/fzf/key-bindings.zsh"
fi
source "$HOME/.config/zsh/fzf-config.sh"

# zoxide
eval "$(zoxide init --cmd cd zsh)"
export _ZO_ECHO="1"
export _ZO_FZF_OPTS="$FZF_DEFAULT_OPTS \
    --exact --no-sort --bind=ctrl-z:ignore --cycle --keep-right \
    --preview='command eza --color=always {2..}' \
    --preview-window=down,30%"

export http_proxy="http://127.0.0.1:7890"
export https_proxy="http://127.0.0.1:7890"
export all_proxy="socks5://127.0.0.1:7890"

# alias
alias sudo="sudo "
alias s="kitty +kitten ssh"
alias lg="lazygit"
alias ld="lazydocker"
alias fm="yazi"
alias v="nvim"
if command -v eza &>/dev/null; then
    alias ls="eza"
    alias tree="eza --tree"
fi
alias lsa="ls -a"
alias ll="ls -l"
alias lla="ll -a"
if command -v bat &>/dev/null; then
    alias cat="bat --theme=Catppuccin-macchiato --style=numbers,changes"
fi
# alias docker
if command -v docker &>/dev/null; then
    alias dp="docker ps"
    alias dpa="docker ps -a"
    alias dl="docker logs"
    alias dlf="docker logs -f"
    alias di="docker images"
fi
# alias docker-compose
if command -v docker-compose &>/dev/null; then
    alias dcp="docker-compose ps"
    alias dcpa="docker-compose ps -a"
    alias dcd="docker-compose down"
    alias dcu="docker-compose up"
    alias dcud="docker-compose up -d"
    alias dcdu="docker-compose down && docker-compose up"
    alias dcdud="docker-compose down && docker-compose up -d"
    alias dcl="docker-compose logs"
    alias dclf="docker-compose logs -f"
fi
# alias chezmoi
if command -v chezmoi &>/dev/null; then
    alias cha="chezmoi add"
    alias chc="cd $(chezmoi source-path)"
    alias chd="chezmoi diff"
    alias che="chezmoi edit --watch"
    alias chf="yazi $HOME/.local/share/chezmoi"
    alias chfg="chezmoi forget"
    alias chg="lazygit -p $HOME/.local/share/chezmoi"
    alias chh="chezmoi help | $PAGER"
    alias chm="chezmoi merge"
    alias chma="chezmoi merge-all"
    alias chp="chezmoi apply"
    alias chra="chezmoi re-add"
    alias chrm="chezmoi remove"
    alias chs="chezmoi status"
    alias cht="chezmoi execute-template"
    alias chu="chezmoi update -v"
fi
# alias systemctl
if [[ "$os" == "Linux" ]]; then
    alias sst="sudo systemctl start"
    alias sss="sudo systemctl status"
    alias srt="sudo systemctl restart"
    alias ssp="sudo systemctl stop"
    alias see="sudo systemctl enable"
    alias sen="sudo systemctl enable --now"
    alias sust="systemctl --user start"
    alias suss="systemctl --user status"
    alias surt="systemctl --user restart"
    alias susp="systemctl --user stop"
    alias suee="systemctl --user enable"
    alias suen="systemctl --user enable --now"
fi
